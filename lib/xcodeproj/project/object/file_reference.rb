module Xcodeproj
  class Project
    module Object

      # This class represents a reference to a file in the file system.
      #
      class PBXFileReference < AbstractObject

        # @return [String] the name of the reference, often not present.
        #
        attribute :name, String

        # @return [String] the path to the file relative to the source tree
        #
        attribute :path, String

        # @return [String] the source tree to which the file is relative.
        #
        # Common values are `SOURCE_ROOT`, `SDKROOT` and `BUILT_PRODUCTS_DIR`
        #
        attribute :source_tree, String, 'SOURCE_ROOT'

        # @return [String] the file type (apparently) used for products
        #   generated by Xcode (i.e. applications, libraries).
        #
        attribute :explicit_file_type, String

        # @return [String] the file type guessed by Xcode.
        #
        # This attribute is not present if there is an `explicit_file_type`.
        #
        attribute :last_known_file_type, String

        # @return [String] whether this file should be indexed. It can
        #   be either `0` or `1`.
        #
        # Apparently present only for products generated by Xcode with a value
        # of `0`.
        #
        attribute :include_in_index, String, '1'

        # @return [String] a string containing a number which represents the
        #   encoding format of the file.
        #
        attribute :fileEncoding, String

        # @return [String] a string that specifies the UTI for the syntax
        #   highlighting.
        #
        #   E.g. `xcode.lang.ruby`
        #
        attribute :xc_language_specification_identifier, String

        # @return [String] a string that specifies the UTI for the structure of
        #   a plist file.
        #
        #   E.g. `com.apple.xcode.plist.structure-definition.iphone.info-plist`
        #
        attribute :plist_structure_definition_identifier, String


        ## CONVENIENCE METHODS #################################################

        # @!group Convenience methods

        # @return [String] the name of the file taking into account the path if
        #   needed.
        #
        def display_name
          name || File.basename(path)
        end

        # @return [Pathname] the path of the file.
        #
        def pathname
          Pathname.new(path)
        end

        # @return [PBXGroup] the group that contains the current file reference.
        #
        def group
          referrers.select { |r| r.class == PBXGroup }.first
        end

        # @return [Array<PBXBuildFile>] the build files associated with the
        #   current file reference.
        #
        def build_files
          referrers.select { |r| r.class == PBXBuildFile }
        end

        # Sets the last known file type according to the extension of the path.
        #
        # @return [String] the computed file type.
        #
        def update_last_known_file_type
          self.last_known_file_type = Constants::FILE_TYPES_BY_EXTENSION[pathname.extname[1..-1]]
        end
        
      end
    end
  end
end
